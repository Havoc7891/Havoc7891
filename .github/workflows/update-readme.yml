name: Update README

on:
  schedule:
    - cron: "0 22 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Generate README Content
        id: generate
        run: |
          python scripts/update-readme.py > updated-readme.md

      - name: Upload README via GitHub API
        env:
          GHTOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"
          FILE="README.md"
          COMMITMESSAGE="Update README"

          LOCALCONTENT=$(base64 -w 0 updated-readme.md)

          REMOTECONTENT=$(curl -s \
            -H "Authorization: token $GHTOKEN" \
            -H "Accept: application/vnd.github.v3.raw" \
            https://api.github.com/repos/$REPO/contents/$FILE)

          REMOTEBASE64=$(echo "$REMOTECONTENT" | base64 -w 0)

          if [ "$LOCALCONTENT" = "$REMOTEBASE64" ]; then
            echo "README up to date."
            exit 0
          fi

          SHA=$(curl -s \
            -H "Authorization: token $GHTOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO/contents/$FILE \
            | jq -r .sha)

          echo "{
            \"message\": \"$COMMITMESSAGE\",
            \"content\": \"$LOCALCONTENT\",
            \"sha\": \"$SHA\",
            \"branch\": \"$BRANCH\"
          }" | curl -X PUT \
            -H "Authorization: token $GHTOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO/contents/$FILE \
            -d @-

  cleanup-cache:
    runs-on: ubuntu-latest
    needs: update-readme
    permissions:
      actions: write
      contents: read
    steps:
      - name: Install GitHub CLI
        run: |
          type -p gh >/dev/null || (
            type -p curl >/dev/null || sudo apt-get update -y && sudo apt-get install -y curl
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt-get update -y
            sudo apt-get install -y gh
          )

      - name: Authenticate GitHub CLI
        env:
          GHTOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "${GHTOKEN}" | gh auth login --with-token

      - name: Delete caches >= 3 days
        env:
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail
          cutoff=$(date -d "-3 days" +%s)
          gh api --paginate repos/$REPO/actions/caches \
            --jq '.actions_caches[] | "\(.id) \(.last_accessed_at)"' | \
          while read -r id last_accessed; do
            ts=$(date -d "$last_accessed" +%s)
            if [ "$ts" -le "$cutoff" ]; then
              echo "Deleting cache id $id (last accessed $last_accessed)"
              gh api --method DELETE repos/$REPO/actions/caches/$id
            fi
          done
